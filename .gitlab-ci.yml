# Определяем стадии сборки и деплоя
stages:
  - build
  - deploy

# Определяем переменные для упрощения конфигурации
variables:
  IMAGE_NAME: "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME" # Название и тег Docker-образа
  DOCKER_HOST: tcp://localhost:2376

# Сборка Docker-образа и пуш в GitLab Container Registry
build:
  stage: build
  image: docker:20.10.16
  services:
    - docker:dind
  script:
    - echo "Логинимся в GitLab Registry"
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
    - echo "Собираем Docker-образ"
    - docker build -t "$IMAGE_NAME" .
    - echo "Пушим образ в GitLab Registry"
    - docker push "$IMAGE_NAME"
  only:
    - master  # Срабатывает только на главной ветке; можно заменить на нужную ветку

# Деплой Docker-образа на удаленный VPS через SSH
deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client # Устанавливаем openssh-client для работы с SSH
  script:
    - echo "Настройка SSH для подключения"
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa  # Записываем приватный ключ в файл
    - chmod 600 ~/.ssh/id_rsa  # Устанавливаем права доступа к приватному ключу
    - ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts  # Добавляем хост в список известных
    - echo "Деплой на VPS"
    - echo "Скоро..."
  only:
    - master  # Деплой тоже происходит только с главной ветки

# Переменные для подключения к VPS
# SSH_HOST, SSH_USER, SSH_PRIVATE_KEY следует задать в GitLab CI/CD Settings как Secret variables
